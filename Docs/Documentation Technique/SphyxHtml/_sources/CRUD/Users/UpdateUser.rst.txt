Update User
===============

Ce module permet de vérifier, valider et mettre à jour les informations des utilisateurs en utilisant une API PHP. Il inclut des vérifications de doublons d'email, de sécurité du mot de passe et de validité de l'email.

Configuration de l'API
----------------------

L'URL de l'API est définie comme suit :

.. code-block:: python

    url = "https://kicekifeqoa.alwaysdata.net/api.php"

Fonctions
---------

.. function:: verfication_doublon_email(E_mail)

    Vérifie si l'email existe déjà dans la base de données.

    :param E_mail: L'adresse email à vérifier.
    :type E_mail: str
    :return: Une liste contenant un booléen et un message de confirmation ou d'erreur.
    :rtype: list

    Exemple d'utilisation :

    .. code-block:: python

        result = verfication_doublon_email("test@example.com")
        print(result)  # [True, 'Mail OK'] ou [False, 'Mail Exist']

---

.. function:: compliance_password(Password)

    Vérifie si le mot de passe respecte les critères de sécurité.

    :param Password: Le mot de passe à vérifier.
    :type Password: str
    :return: Une liste contenant un booléen et un message de confirmation ou d'erreur.
    :rtype: list

    Critères de conformité :
      - Au moins 8 caractères.
      - Au maximum 72 caractères (limite de bcrypt).
      - Contient au moins une lettre majuscule.
      - Contient au moins une lettre minuscule.
      - Contient au moins un chiffre.
      - Contient au moins un caractère spécial parmi `!@#$%^&*(),.?{}|<>`.

    Exemple d'utilisation :

    .. code-block:: python

        result = compliance_password("P@ssw0rd123")
        print(result)  # [True, 'Pass OK']

---

.. function:: is_valid_email(email)

    Vérifie si l'email est valide au niveau du format et de l'existence du domaine.

    :param email: L'adresse email à vérifier.
    :type email: str
    :return: Une liste contenant un booléen et un message de confirmation ou d'erreur.
    :rtype: list

    Exemple d'utilisation :

    .. code-block:: python

        result = is_valid_email("user@example.com")
        print(result)  # [True, 'Mail OK'] ou [False, 'Mail NOK']

---

.. function:: hash_password(password)

    Hache le mot de passe en utilisant bcrypt.

    :param password: Le mot de passe à hacher.
    :type password: str
    :return: Le mot de passe haché au format `bytes`.
    :rtype: bytes

    Exemple d'utilisation :

    .. code-block:: python

        hashed = hash_password("MySecureP@ssword")
        print(hashed)  # b'$2b$12$...'

---

.. function:: update_user(id_user, email=None, password=None)

    Met à jour un utilisateur en envoyant une requête POST à l'API.

    :param id_user: L'ID de l'utilisateur à mettre à jour.
    :type id_user: int
    :param email: Le nouvel email de l'utilisateur.
    :type email: str, optionnel
    :param password: Le nouveau mot de passe de l'utilisateur.
    :type password: str, optionnel
    :return: Une liste contenant un booléen et un message de confirmation ou d'erreur.
    :rtype: list

    **Conditions :**
      - Si `email` est fourni, il sera validé et vérifié pour les doublons.
      - Si `password` est fourni, il sera vérifié pour la conformité et haché avant l'envoi.
      - Si `email` et `password` ne sont pas fournis, une erreur sera retournée.

    Exemple d'utilisation :

    .. code-block:: python

        result = update_user(5, email="newuser@example.com", password="P@ssw0rd123")
        print(result)  # [True, 'User OK'] ou [False, 'Erreur message']

    Exemple de `post_data` envoyé à l'API :

    .. code-block:: json

        {
            "table": "Users",
            "action": "update",
            "data": {
                "email": "newuser@example.com",
                "password": "$2b$12$..."
            },
            "column": "id_user",
            "value": 5
        }

    Exemple de sortie en cas de succès :

    .. code-block:: python

        [True, 'User OK']

    Exemple de sortie en cas d'erreur :

    .. code-block:: python

        [False, 'Erreur lors de la mise à jour : 400 - Bad Request']


