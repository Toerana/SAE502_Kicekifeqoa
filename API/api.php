<?php
 goto Nck3k; Bv5lY: ini_set("\154\157\x67\137\x65\x72\x72\x6f\162\163", 1); goto gset3; BlctU: ini_set("\x64\x69\163\160\x6c\141\x79\137\x73\164\141\162\x74\165\x70\137\x65\x72\x72\x6f\162\x73", 1); goto POl_p; La2KS: function handlePost($pdo) { $data = json_decode(file_get_contents("\160\150\x70\72\x2f\57\x69\x6e\x70\165\164"), true); $table = $data["\x74\141\x62\x6c\x65"] ?? null; $action = $data["\x61\143\x74\x69\157\x6e"] ?? null; if ($table && $action) { if ($action === "\151\x6e\163\x65\x72\x74") { $columns = implode("\54\40", array_keys($data["\144\x61\164\x61"])); $placeholders = implode("\x2c\x20", array_fill(0, count($data["\x64\141\x74\x61"]), "\77")); $stmt = $pdo->prepare("\111\116\x53\x45\x52\x54\40\111\116\124\x4f\x20\x60{$table}\x60\x20\x28{$columns}\51\x20\x56\101\x4c\x55\x45\123\40\50{$placeholders}\x29"); $stmt->execute(array_values($data["\x64\x61\164\x61"])); echo json_encode(array("\x6d\145\163\x73\x61\x67\x65" => "\x44\x6f\x6e\x6e\303\251\145\163\x20\141\152\157\165\x74\xc3\251\x65\163\x20\141\x76\x65\143\40\x73\x75\143\x63\303\250\x73\56")); } elseif ($action === "\x61\144\x64\x5f\162\145\x63\165\160") { try { $columns = implode("\54\x20", array_keys($data["\144\141\164\x61"])); $placeholders = implode("\54\40", array_fill(0, count($data["\x64\x61\164\141"]), "\77")); $stmt = $pdo->prepare("\111\116\123\x45\x52\124\x20\111\116\x54\117\40\x60{$table}\140\40\x28{$columns}\x29\40\x56\101\114\x55\105\x53\x20\x28{$placeholders}\x29"); $stmt->execute(array_values($data["\144\141\x74\x61"])); $lastId = $pdo->lastInsertId(); echo json_encode(array("\x6d\145\x73\x73\141\147\145" => "\104\157\156\x6e\xc3\251\x65\x73\x20\141\152\157\165\x74\303\xa9\x65\x73\40\141\x76\x65\143\40\163\x75\x63\x63\xc3\xa8\163\x2e", "\151\x64" => $lastId)); } catch (PDOException $e) { http_response_code(500); echo json_encode(array("\x65\x72\162\157\162" => "\105\162\x72\x65\x75\162\x20\x6c\157\162\163\x20\144\145\40\154\47\151\156\163\145\162\164\151\x6f\x6e\40\x3a\40" . $e->getMessage())); } } elseif ($action === "\165\x70\x64\141\x74\x65") { try { if (empty($data["\x64\141\x74\141"]) || empty($data["\x63\x6f\x6c\x75\155\x6e"]) || !isset($data["\166\x61\x6c\x75\145"])) { http_response_code(400); echo json_encode(array("\145\x72\x72\157\x72" => "\104\157\x6e\x6e\xc3\xa9\x65\163\x2c\x20\143\157\154\x6f\x6e\156\x65\x20\x6f\165\x20\166\141\x6c\x65\x75\162\40\155\141\156\x71\165\141\156\164\145\163\56")); return; } $set = array(); foreach ($data["\144\x61\x74\141"] as $column => $value) { $set[] = "\x60{$column}\x60\x20\x3d\x20\77"; } $set = implode("\54\x20", $set); $column = $data["\143\157\x6c\x75\x6d\156"]; $value = $data["\x76\141\154\165\x65"]; $query = "\125\120\104\x41\124\105\x20\x60{$table}\x60\40\123\x45\x54\40{$set}\40\x57\110\x45\x52\x45\x20\x60{$column}\x60\x20\75\40\77"; $stmt = $pdo->prepare($query); $stmt->execute(array_merge(array_values($data["\144\141\164\141"]), array($value))); if ($stmt->rowCount() > 0) { echo json_encode(array("\155\145\163\163\x61\147\x65" => "\104\x6f\x6e\x6e\xc3\xa9\x65\x73\40\155\x69\163\x65\x73\x20\303\xa0\x20\152\x6f\x75\x72\x20\141\166\x65\x63\40\x73\x75\x63\x63\303\xa8\x73\56")); } else { http_response_code(404); echo json_encode(array("\x65\162\x72\x6f\x72" => "\x41\x75\143\x75\156\145\x20\x64\x6f\156\156\303\251\x65\x20\x6e\47\x61\x20\xc3\251\x74\303\251\40\155\x69\x73\x65\40\303\240\x20\152\x6f\x75\162\x2e")); } } catch (PDOException $e) { http_response_code(500); echo json_encode(array("\x65\x72\162\157\x72" => "\105\x72\x72\x65\x75\x72\x20\154\x6f\x72\x73\x20\x64\x65\x20\154\141\40\155\151\163\145\40\303\240\x20\152\157\x75\x72\40\x3a\x20" . $e->getMessage())); } } else { http_response_code(400); echo json_encode(array("\145\162\162\157\x72" => "\101\143\164\151\x6f\x6e\x20\x6e\x6f\156\40\162\145\143\x6f\156\156\165\x65\x2e")); } } else { http_response_code(400); echo json_encode(array("\145\162\x72\x6f\162" => "\116\x6f\155\40\x64\x65\40\164\141\142\x6c\x65\x20\157\165\x20\141\x63\x74\x69\x6f\156\x20\x6d\x61\156\161\165\141\x6e\x74\x65\x2e")); } } goto uFSpp; gQRkQ: if (file_exists($encryptedFile)) { $encryptedData = file_get_contents($encryptedFile); $iv = substr($encryptedData, 0, 16); $ciphertext = substr($encryptedData, 16); $decryptedData = openssl_decrypt($ciphertext, "\x61\145\163\x2d\x32\65\x36\x2d\143\x62\143", $key, OPENSSL_RAW_DATA, $iv); if ($decryptedData === false) { http_response_code(500); echo json_encode(array("\145\x72\x72\x6f\x72" => "\xc3\x89\x63\150\x65\143\x20\144\165\40\144\xc3\251\143\150\151\146\146\x72\145\x6d\145\x6e\164\x20\x3a\40" . openssl_error_string())); die; } if (empty($decryptedData)) { http_response_code(500); echo json_encode(array("\x65\x72\162\x6f\162" => "\x4c\145\x73\40\144\157\x6e\x6e\xc3\xa9\145\x73\x20\144\xc3\xa9\x63\x68\151\146\146\162\xc3\xa9\145\163\x20\163\x6f\x6e\x74\40\166\x69\144\145\163\56")); die; } $config = json_decode($decryptedData, true); if (json_last_error() !== JSON_ERROR_NONE) { http_response_code(500); echo json_encode(array("\x65\x72\162\157\162" => "\105\162\162\145\165\x72\40\x4a\123\117\x4e\40\72\x20" . json_last_error_msg())); die; } try { $pdo = new PDO("\155\171\163\x71\154\72\150\157\x73\x74\75{$config["\150\x6f\163\x74"]}\x3b\x64\x62\156\x61\x6d\145\x3d{$config["\x64\x62\156\141\x6d\x65"]}", $config["\165\x73\145\x72\x6e\141\x6d\x65"], $config["\160\141\163\x73\x77\157\x72\144"]); $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); } catch (PDOException $e) { http_response_code(500); echo json_encode(array("\x65\162\x72\x6f\162" => "\303\211\143\150\145\143\40\x64\x65\x20\x6c\x61\x20\143\157\x6e\x6e\x65\170\151\x6f\x6e\x20\303\240\x20\x6c\141\40\x62\x61\x73\x65\x20\x64\145\x20\x64\157\156\x6e\xc3\251\x65\x73\x20\x3a\x20" . $e->getMessage())); die; } } else { http_response_code(500); echo json_encode(array("\x65\162\x72\157\x72" => "\x45\162\x72\145\165\162\x20\151\x6e\x74\x65\x72\x6e\145\54\40\x66\x69\x63\150\151\145\x72\40\144\x65\x20\x63\157\x6e\x66\151\147\165\x72\141\164\x69\x6f\156\x20\155\141\156\161\x75\141\156\164\x2e")); die; } goto ABScx; gset3: ini_set("\x65\x72\x72\x6f\x72\x5f\154\x6f\147", $logFile); goto GurOD; fBS0j: function handleCount($pdo) { $table = $_GET["\164\141\x62\154\145"] ?? null; $filterColumn = $_GET["\146\x69\154\164\145\x72\137\x63\157\154\x75\x6d\156"] ?? null; $filterValue = $_GET["\146\151\x6c\164\x65\x72\x5f\166\141\154\x75\145"] ?? null; if ($table && $filterColumn) { $query = "\x53\105\x4c\105\103\124\40\x43\x4f\x55\116\x54\x28\52\51\x20\101\123\x20\x63\157\x75\156\164\x20\106\122\x4f\x4d\40\140{$table}\x60\x20\x57\x48\x45\122\x45\40{$filterColumn}\x20\x3d\x20\x3a\x66\151\x6c\164\145\x72\x56\141\x6c\x75\x65"; $stmt = $pdo->prepare($query); $stmt->bindValue("\72\146\151\x6c\x74\x65\162\x56\141\x6c\165\x65", $filterValue); try { $stmt->execute(); $result = $stmt->fetch(PDO::FETCH_ASSOC); header("\103\157\x6e\x74\x65\156\x74\x2d\124\x79\160\x65\72\x20\141\x70\x70\154\151\x63\141\x74\151\157\x6e\x2f\152\x73\x6f\156"); echo json_encode($result); } catch (PDOException $e) { http_response_code(500); echo json_encode(array("\x65\162\162\x6f\x72" => "\105\x72\162\145\x75\162\x20\x6c\x6f\162\163\x20\x64\165\40\143\157\155\160\164\141\147\145\x20\x64\x65\163\40\x64\x6f\156\156\303\xa9\145\x73\40\72\40" . $e->getMessage())); } } else { http_response_code(400); echo json_encode(array("\145\162\x72\x6f\x72" => "\x4e\157\x6d\x20\144\145\40\164\x61\x62\x6c\145\x20\x6f\x75\40\143\x6f\154\157\156\156\x65\40\144\145\40\146\151\x6c\x74\x72\145\x20\155\x61\x6e\x71\165\141\156\164\x65\x2e")); } } goto d1RHw; Nck3k: $key = hash("\x73\x68\x61\62\x35\x36", "\x66\x64\67\146\x62\x66\62\x36\62\61\61\70\x62\143\x39\66\63\x31\x31\x39\x33\x65\146\x64\141\142\65\145\x33\x33\x61\x64\x66\x38\x38\65\63\60\66\61\60\x66\67\x62\143\70\x62\x63\67\143\61\71\146\x37\141\x33\143\x61\x37\x36\x66\63\64\144", true); goto Lx6tv; xWu3y: function handleGet($pdo) { $table = $_GET["\x74\141\x62\154\145"] ?? null; $columns = $_GET["\143\x6f\x6c\x75\x6d\x6e\x73"] ?? "\52"; $filterColumn = $_GET["\x66\151\154\164\145\x72\137\143\157\x6c\x75\x6d\x6e"] ?? null; $filterValue = $_GET["\146\151\154\164\145\x72\x5f\x76\141\154\x75\x65"] ?? null; $joinTables = $_GET["\152\157\x69\x6e\137\x74\141\x62\x6c\145"] ?? null; $joinConditions = $_GET["\152\x6f\x69\156\137\143\157\156\144\x69\x74\151\x6f\156"] ?? null; if ($table) { $query = "\123\105\x4c\105\103\124\x20{$columns}\x20\106\x52\x4f\x4d\x20\x60{$table}\140"; if ($joinTables && $joinConditions) { $joinTablesArray = explode("\x2c", $joinTables); $joinConditionsArray = explode("\x2c", $joinConditions); foreach ($joinTablesArray as $index => $joinTable) { $query .= "\x20\112\x4f\x49\116\x20\140{$joinTable}\x60\40\117\116\x20{$joinConditionsArray[$index]}"; } } if ($filterColumn && $filterValue !== null) { $query .= "\40\127\110\105\x52\105\40{$filterColumn}\x20\x3d\40\72\x66\151\154\x74\x65\x72\x56\x61\x6c\x75\x65"; $stmt = $pdo->prepare($query); if (is_numeric($filterValue)) { $stmt->bindValue("\x3a\146\x69\x6c\164\145\x72\126\x61\154\x75\x65", (int) $filterValue, PDO::PARAM_INT); } else { $stmt->bindValue("\x3a\x66\x69\154\164\145\x72\x56\x61\154\x75\145", $filterValue, PDO::PARAM_STR); } } else { $stmt = $pdo->prepare($query); } try { $stmt->execute(); $result = $stmt->fetchAll(PDO::FETCH_ASSOC); header("\103\x6f\x6e\x74\145\x6e\164\55\x54\171\160\x65\x3a\x20\141\160\160\154\x69\x63\x61\x74\x69\x6f\x6e\57\x6a\x73\157\x6e"); echo json_encode($result); } catch (PDOException $e) { http_response_code(500); echo json_encode(array("\x65\x72\162\157\x72" => "\x45\x72\x72\145\x75\x72\x20\x6c\157\x72\x73\x20\144\x65\40\x6c\141\40\162\xc3\251\x63\165\x70\303\xa9\162\x61\164\x69\x6f\x6e\40\144\x65\163\x20\144\157\156\156\xc3\251\x65\163\40\72\x20" . $e->getMessage())); } } else { http_response_code(400); echo json_encode(array("\x65\162\162\157\x72" => "\116\157\155\40\144\145\x20\164\141\142\x6c\x65\x20\155\x61\156\161\x75\x61\x6e\x74\x2e")); } } goto La2KS; GurOD: function logDebugInfo($message) { error_log($message); } goto YrFtY; ABScx: $requestMethod = $_SERVER["\122\x45\x51\x55\105\x53\x54\137\x4d\x45\124\x48\x4f\104"]; goto PAP9z; PAP9z: switch ($requestMethod) { case "\x47\x45\124": handleGet($pdo); break; case "\x50\x4f\123\x54": handlePost($pdo); break; case "\104\105\114\x45\124\x45": handleDelete($pdo); break; case "\x43\x4f\x55\x4e\124": handleCount($pdo); break; default: http_response_code(405); echo json_encode(array("\x65\x72\x72\x6f\162" => "\x4d\303\251\x74\150\x6f\144\145\40\156\x6f\156\40\141\165\164\x6f\x72\x69\163\303\xa9\x65\x2e\x20\125\x74\x69\154\151\x73\x65\x7a\40\107\x45\x54\54\x20\120\x4f\x53\x54\x2c\x20\x44\x45\114\x45\124\105\40\157\x75\x20\103\117\125\x4e\x54\x2e")); } goto xWu3y; Lx6tv: ini_set("\x64\x69\163\x70\x6c\x61\171\137\145\x72\162\157\x72\x73", 1); goto BlctU; YrFtY: $encryptedFile = __DIR__ . "\57\x2e\56\x2f\144\142\x5f\x63\157\156\x66\x69\x67\56\x65\156\x63"; goto gQRkQ; am9xR: $logFile = __DIR__ . "\x2f\145\162\x72\x6f\x72\x5f\154\157\147\x2e\154\157\147"; goto Bv5lY; POl_p: error_reporting(E_ALL); goto am9xR; uFSpp: function handleDelete($pdo) { $data = json_decode(file_get_contents("\x70\x68\160\x3a\x2f\57\x69\x6e\160\165\x74"), true); $table = $data["\x74\x61\142\154\x65"] ?? null; $column = $data["\143\157\x6c\165\x6d\156"] ?? null; $value = $data["\166\141\154\165\145"] ?? null; if ($table && $column && $value) { $stmt = $pdo->prepare("\x44\x45\114\105\124\x45\40\106\122\x4f\x4d\40\x60{$table}\x60\40\x57\x48\105\122\x45\x20{$column}\x20\75\40\x3f"); $stmt->execute(array($value)); echo json_encode(array("\x6d\145\x73\163\141\147\145" => "\x44\157\x6e\156\xc3\xa9\x65\163\x20\163\x75\x70\x70\x72\x69\x6d\303\251\x65\x73\x20\141\166\145\143\x20\163\165\143\x63\303\xa8\x73\x2e")); } else { http_response_code(400); echo json_encode(array("\145\162\x72\x6f\x72" => "\x54\141\x62\154\145\54\x20\143\157\x6c\x6f\x6e\x6e\x65\x20\x6f\x75\40\x76\141\154\145\x75\162\40\155\141\156\x71\165\x61\156\x74\145\x2e")); } } goto fBS0j; d1RHw: ?>